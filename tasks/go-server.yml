---
- name: yum install go-server
  sudo: yes
  yum: pkg=go-server-{{ GOCD_GO_VERSION }} state=present
  notify:
  - restart go-server
  when: ansible_pkg_mgr=='yum'

- name: apt install go-server
  sudo: yes
  apt: pkg=go-server={{ GOCD_GO_VERSION }} state=present force=yes
  when: ansible_pkg_mgr=='apt'

- name: flag that we're configuration a Go server
  set_fact: tmp_gocd_onserver=True

- name: replace /etc/default/go-server from package
  template: "src=go-server-defaults dest=/etc/default/go-server mode=0644 group={{ GOCD_GROUP }} owner={{ GOCD_USER }}"
  sudo: yes
  notify: restart go-server
  with_sequence: "count={{ GOCD_AGENT_INSTANCES }}"

- name: start go-server
  sudo: yes
  service: name=go-server state=started
  notify:
     - ensure go-server running

- name: get iptables rules
  shell: iptables -L
  register: iptablesrules
  always_run: yes
  sudo: true

- name: add go admin iptable rule (HTTP)
  command: /sbin/iptables -I INPUT 1 -p tcp --dport 8153 -j ACCEPT -m comment --comment "Go admin (HTTP)"
  sudo: true
  when: iptablesrules.stdout.find("dpt:8153") == -1

- name: add go admin iptable rule (HTTPS)
  command: /sbin/iptables -I INPUT 1 -p tcp --dport 8154 -j ACCEPT -m comment --comment "Go CD admin (HTTPS)"
  sudo: true
  when: iptablesrules.stdout.find("dpt:8154") == -1

- name: save iptables
  command: /sbin/iptables-save
  sudo: true

- name: restart iptables
  service: name=iptables state=restarted
  sudo: true

- name: get iptables rules
  shell: iptables -L
  register: iptablesrules
  always_run: yes
  sudo: true

- name: create script for automated Go configuration backups to Git
  template: backup=no dest=/usr/share/go-server/ mode=0755 src=backup_to_git.sh
